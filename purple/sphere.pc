/*
**
*/

#include "purple.h"

void init(void)
{
	p_init_input(0, P_INPUT_REAL, "radius", P_INPUT_REQUIRED, P_REAL_MIN, 0.0, P_REAL_DEFAULT, 1.0, P_END);
	/* or (using macros for tags): */
	p_init_input(0, P_INPUT_REAL, "radius", P_INPUT_REQUIRED, P_INPUT_MIN(0), P_INPUT_DEFAULT(1), P_INPUT_DONE);

	// or:
	p_init_input_real32(0, "radius", P_INPUT_REQUIRED, P_MIN, 0.0f, P_DEFAULT, 1.0f, P_END);

	// or:
	p_init_input_real32(0, "radius", "req,min=0,default=1");

	p_init_meta("name", "sphere");
	p_init_meta("author/name", "Emil Brink");
	p_init_meta("author/email", "emil@obsession.se");
	p_init_meta("copyright/year", "2004");
	p_init_meta("copyright/holder", "Parallelldatorcentrum, KTH");
	p_init_meta("help/purpose", "Creates a sphere with a given radius.");
}

void compute(void)
{
	real32	r = p_input_real32(0);
	ONode	*geo = p_output_node(NULL), *obj = p_output_node(NULL);

	/* Establish link between object node and its geometry. */
	p_node_object_link(obj, geo);

	/* Set vertices in corners, 'r' units from origin. */
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 0, -r, r, -r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 1, -r, r,  r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 2,  r, r,  r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 3,  r, r, -r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 4, -r, -r, -r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 5, -r, -r,  r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 6,  r, -r,  r);
	p_node_geometry_layer_set_vertex_xyz(geo, "vertex", 7,  r, -r, -r);

	/* Define polygons, forming a cube. */
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 0,  0, 1, 2, 3);
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 1,  1, 5, 6, 2);
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 2,  5, 4, 7, 6);
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 3,  3, 7, 4, 0);
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 4,  0, 4, 5, 1);
	p_node_geometry_layer_set_polygon_corner_uint32(geo, "polygon", 5,  2, 6, 7, 3);

	/* Make all creases soft, causing the cube to smooth into a sphere. */
	p_node_geometry_crease_set_vertex(geo, "", 0);
	p_node_geometry_crease_set_edge(geo, "", 0);

	/* And we're done! :) */
}
